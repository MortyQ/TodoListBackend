import { NestFactory } from '@nestjs/core';
import { Logger } from '@nestjs/common';
import * as argon2 from 'argon2';
import { AppModule } from '../app.module';
import { User, UserRole } from '../users/schemas/user.schema';
import { List } from '../lists/schemas/list.schema';
import { Task, TaskStatus, TaskPriority } from '../tasks/schemas/task.schema';
import { Model } from 'mongoose';
import { getModelToken } from '@nestjs/mongoose';

async function seed() {
  const logger = new Logger('Seed');

  try {
    // –°–æ–∑–¥–∞–µ–º NestJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const app = await NestFactory.createApplicationContext(AppModule);

    // –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    const userModel = app.get<Model<User>>(getModelToken(User.name));
    const listModel = app.get<Model<List>>(getModelToken(List.name));
    const taskModel = app.get<Model<Task>>(getModelToken(Task.name));

    logger.log('üå± Starting database seeding...');

    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    await Promise.all([
      userModel.deleteMany({}),
      listModel.deleteMany({}),
      taskModel.deleteMany({}),
    ]);
    logger.log('üóëÔ∏è  Cleared existing data');

    // –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–æ–ª–∏ (–æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    const passwordHash = await argon2.hash('Passw0rd!');

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const adminUser = await userModel.create({
      email: 'admin@example.com',
      passwordHash,
      name: 'Admin User',
      role: UserRole.ADMIN,
    });

    const regularUser = await userModel.create({
      email: 'user@example.com',
      passwordHash,
      name: 'Regular User',
      role: UserRole.USER,
    });

    logger.log('üë• Created users: admin@example.com and user@example.com');

    // –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–∫–∏ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const workList = await listModel.create({
      title: '–†–∞–±–æ—á–∏–µ –∑–∞–¥–∞—á–∏',
      ownerId: regularUser._id,
    });

    const personalList = await listModel.create({
      title: '–õ–∏—á–Ω—ã–µ –¥–µ–ª–∞',
      ownerId: regularUser._id,
    });

    logger.log('üìù Created lists for regular user');

    // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ —Å–ø–∏—Å–∫–∞
    const workTasks = [
      {
        listId: workList._id,
        title: '–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
        description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç —Å –∞–Ω–∞–ª–∏–∑–æ–º',
        longDescription: '–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å: –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ—à–ª—ã–º –º–µ—Å—è—Ü–µ–º, –ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∫–≤–∞—Ä—Ç–∞–ª. –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ CRM —Å–∏—Å—Ç–µ–º—ã –∏ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏.',
        status: TaskStatus.TODO,
        priority: TaskPriority.HIGH,
        tags: ['—Ä–∞–±–æ—Ç–∞', '–æ—Ç—á–µ—Ç—ã', '—Å—Ä–æ—á–Ω–æ'],
        dueDate: new Date('2024-01-15'),
        order: 1,
      },
      {
        listId: workList._id,
        title: '–ü—Ä–æ–≤–µ—Å—Ç–∏ —Å–æ–≤–µ—â–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã',
        description: '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–∏–Ω—Ç–∞',
        longDescription: '–û–±—Å—É–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ—à–ª–æ–≥–æ —Å–ø—Ä–∏–Ω—Ç–∞, –ø–ª–∞–Ω—ã –Ω–∞ —Ç–µ–∫—É—â–∏–π, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–∞–¥–∞—á–∏ –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏.',
        status: TaskStatus.IN_PROGRESS,
        priority: TaskPriority.MEDIUM,
        tags: ['—Ä–∞–±–æ—Ç–∞', '–∫–æ–º–∞–Ω–¥–∞', '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'],
        dueDate: new Date('2024-01-10'),
        order: 2,
      },
      {
        listId: workList._id,
        title: '–ò–∑—É—á–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        description: 'React 18, Next.js 13, TypeScript best practices',
        longDescription: '–ì–ª—É–±–æ–∫–æ–µ –∏–∑—É—á–µ–Ω–∏–µ: –Ω–æ–≤—ã–µ features React 18 (Concurrent Features, Suspense), App Router –≤ Next.js 13, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã TypeScript. –°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏–∑—É—á–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.',
        status: TaskStatus.TODO,
        priority: TaskPriority.LOW,
        tags: ['–æ–±—É—á–µ–Ω–∏–µ', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', 'frontend'],
        order: 3,
      },
      {
        listId: workList._id,
        title: '–ö–æ–¥-—Ä–µ–≤—å—é Pull Request #234',
        description: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
        status: TaskStatus.DONE,
        priority: TaskPriority.MEDIUM,
        tags: ['–∫–æ–¥-—Ä–µ–≤—å—é', '–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'],
        completedAt: new Date('2024-01-05'),
        order: 4,
      },
    ];

    // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
    const personalTasks = [
      {
        listId: personalList._id,
        title: '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É',
        description: '–ü–ª–∞–Ω–æ–≤—ã–π –æ—Å–º–æ—Ç—Ä —É —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞',
        status: TaskStatus.TODO,
        priority: TaskPriority.HIGH,
        tags: ['–∑–¥–æ—Ä–æ–≤—å–µ', '–ª–∏—á–Ω–æ–µ'],
        dueDate: new Date('2024-01-20'),
        order: 1,
      },
      {
        listId: personalList._id,
        title: '–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –Ω–∞ –Ω–µ–¥–µ–ª—é',
        description: '–°–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏ —Å—Ö–æ–¥–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω',
        longDescription: '–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫: –º–æ–ª–æ–∫–æ, —Ö–ª–µ–±, –æ–≤–æ—â–∏ –¥–ª—è —Å–∞–ª–∞—Ç–æ–≤, –º—è—Å–æ –¥–ª—è —É–∂–∏–Ω–æ–≤ –Ω–∞ –Ω–µ–¥–µ–ª—é, —Ñ—Ä—É–∫—Ç—ã, –π–æ–≥—É—Ä—Ç. –ù–µ –∑–∞–±—ã—Ç—å –∫—É–ø–∏—Ç—å –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ü–∏–∏.',
        status: TaskStatus.IN_PROGRESS,
        priority: TaskPriority.MEDIUM,
        tags: ['–ø–æ–∫—É–ø–∫–∏', '–¥–æ–º', '–µ–¥–∞'],
        order: 2,
      },
      {
        listId: personalList._id,
        title: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É "Clean Code"',
        description: '–ò–∑—É—á–∏—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø—ã –Ω–∞–ø–∏—Å–∞–Ω–∏—è —á–∏—Å—Ç–æ–≥–æ –∫–æ–¥–∞',
        status: TaskStatus.TODO,
        priority: TaskPriority.LOW,
        tags: ['—á—Ç–µ–Ω–∏–µ', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '—Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ'],
        order: 3,
      },
      {
        listId: personalList._id,
        title: '–°–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É',
        description: '30 –º–∏–Ω—É—Ç —É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∏–º–Ω–∞—Å—Ç–∏–∫–∏',
        status: TaskStatus.DONE,
        priority: TaskPriority.MEDIUM,
        tags: ['—Å–ø–æ—Ä—Ç', '–∑–¥–æ—Ä–æ–≤—å–µ'],
        completedAt: new Date(),
        order: 4,
      },
      {
        listId: personalList._id,
        title: '–ü–æ–∑–≤–æ–Ω–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—è–º',
        description: '–£–∑–Ω–∞—Ç—å –∫–∞–∫ –¥–µ–ª–∞, –æ–±—Å—É–¥–∏—Ç—å –ø–ª–∞–Ω—ã –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ',
        status: TaskStatus.ARCHIVED,
        priority: TaskPriority.LOW,
        tags: ['—Å–µ–º—å—è', '—Å–≤—è–∑—å'],
        order: 5,
      },
    ];

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await taskModel.insertMany([...workTasks, ...personalTasks]);

    logger.log('‚úÖ Created tasks for both lists');
    logger.log('üéâ Database seeding completed successfully!');
    logger.log('');
    logger.log('üîê Test users created:');
    logger.log('   Admin: admin@example.com / Passw0rd!');
    logger.log('   User:  user@example.com / Passw0rd!');
    logger.log('');
    logger.log('üìã Sample data includes:');
    logger.log('   - 2 lists with various tasks');
    logger.log('   - Different task statuses, priorities, and tags');
    logger.log('   - Tasks with due dates and descriptions');

    await app.close();
    process.exit(0);
  } catch (error) {
    logger.error('‚ùå Seeding failed:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏
seed();
